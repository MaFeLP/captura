name: release
on:
  release:
    types: [created]

permissions:
  contents: read

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python3 -m pip install -r requirements.txt
          python3 -m pip install pyinstaller
          brew install create-dmg

      - name: Setup environment
        run: |
          echo "__version__ = \"${{ github.event.release.tag_name }}\"" > captura/__init__.py
          echo "production = True" >> captura/__init__.py
          echo "environment = \"macos\"" >> captura/__init__.py

      - name: Create Application
        run: |
          pyinstaller --onedir --name captura --windowed --add-data "captura/ui/assets:assets" captura/__main__.py

      - name: Create .dmg file
        run: |
          cd dist
          create-dmg --volname "Captura" --window-pos 200 120 --window-size 800 450 --icon-size 100 --app-drop-link 600 185 captura.dmg ./captura.app

      - name: Create standalone file
        run:
          pyinstaller --onefile --name captura --windowed --add-data "captura/ui/assets:assets" captura/__main__.py

      #- name: Create .dmg file
      #  run: |
      #    create-dmg \
      #      --volname "Captura" \
      #      --window-pos 200 120 \
      #      --window-size 800 400 \
      #      --icon-size 100 \
      #      --icon "Captura.app" 200 190 \
      #      --hide-extension "Captura.app" \
      #      --app-drop-link 600 185 \
      #      "captura.dmg" \
      #      "./captura.app"

      - name: Upload DMG to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/captura.dmg
          asset_name: captura_macos.dmg
          asset_content_type: application/octet-stream

      - name: Upload Standalone binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/captura
          asset_name: captura_macos_standalone.bin
          asset_content_type: application/octet-stream

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python3 -m pip install -r requirements.txt
          python3 -m pip install pyinstaller pyxdg

      - name: Setup environment
        run: |
          echo "__version__ = \"${{ github.event.release.tag_name }}\"" > captura/__init__.py
          echo "production = True" >> captura/__init__.py
          echo "environment = \"linux\"" >> captura/__init__.py

      - name: Create Application
        run: |
          pyinstaller --name captura --windowed --add-data "captura/ui/assets:assets" captura/__main__.py

      - name: Create .tar.gz file
        run: |
          cd ./dist/
          tar czf captura.tar.gz ./captura/

      - name: Upload tarball to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/captura.tar.gz
          asset_name: captura_linux.tar.gz
          asset_content_type: application/octet-stream

      - name: Create standalone file
        run: |
          pyinstaller --name captura --windowed --onefile --add-data "captura/ui/assets:assets" captura/__main__.py

      - name: Upload Standalone binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/captura_linux
          asset_name: captura_linux
          asset_content_type: application/octet-stream


  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python3 -m pip install -r requirements.txt
          python3 -m pip install pyinstaller
          dotnet tool install --global wix

      - name: Setup environment
        run: |
          "__version__ = \"${{ github.event.release.tag_name }}\"" | Out-File -FilePath "captura/__init__.py"
          "production = True" | Out-File -Append -FilePath "captura/__init__.py"
          "environment = \"linux\"" | Out-File -Appen -FilePath "captura/__init__.py"
          (Get-Content .github\captura.wxs).Replace('[[VERSION]]', '${{ github.event.release.tag_name }}') | Set-Content .github\captura.wxs

      - name: Create Application
        run: |
          pyinstaller --name captura --windowed --add-data "captura/ui/assets:assets" captura/__main__.py

      - name: Create Installer .msi
        run: |
          mv .\\.github\\captura.wxs .\\dist\\captura\\captura.wxs
          cd .\\dist\\captura
          wix build -o captura-installer.msi .\captura.wxs

      - name: Upload windows installer to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/captura-installer.msi
          asset_name: captura-installer.msi
          asset_content_type: application/octet-stream

      - name: Create standalone Application
        run: |
          pyinstaller --onefile --name captura --windowed --add-data "captura/ui/assets:assets" captura/__main__.py

      - name: Upload Standalone binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/captura.exe
          asset_name: captura_portable.exe
          asset_content_type: application/octet-stream
