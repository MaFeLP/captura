name: release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (format: "x.y.z")'
        required: true
        default: '0.0.0'

permissions:
  contents: write

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python3 -m pip install -r requirements.txt
          python3 -m pip install pyinstaller
          brew install create-dmg

      - name: Setup environment
        run: |
          echo '__version__ = "${{ github.event.inputs.version }}"' > captura/__init__.py
          echo 'production = True' >> captura/__init__.py
          echo 'environment = "macos"' >> captura/__init__.py

      - name: Create Application
        run: |
          pyinstaller --onedir --name captura --windowed --add-data "captura/ui/assets:assets" captura/__main__.py

      - name: Create .dmg file
        run: |
          cd dist
          create-dmg --volname "Captura" --window-pos 200 120 --window-size 800 450 --icon-size 100 --app-drop-link 600 185 captura.dmg ./captura.app
          mv captura.dmg ../captura.dmg

      #- name: Create .dmg file
      #  run: |
      #    create-dmg \
      #      --volname "Captura" \
      #      --window-pos 200 120 \
      #      --window-size 800 400 \
      #      --icon-size 100 \
      #      --icon "Captura.app" 200 190 \
      #      --hide-extension "Captura.app" \
      #      --app-drop-link 600 185 \
      #      "captura.dmg" \
      #      "./captura.app"

      - name: Create standalone file
        run: |
          rm -rf dist
          pyinstaller --onefile --name captura --windowed --add-data "captura/ui/assets:assets" captura/__main__.py
          mv ./dist/captura ./captura_macos_standalone.bin

      - name: Upload assets to release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ./captura.dmg
            ./captura_macos_standalone.bin
          draft: true
          tag_name: v${{ github.event.inputs.version }}
          name: Captura v${{ github.event.inputs.version }}
          generate_release_notes: true

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python3 -m pip install -r requirements.txt
          python3 -m pip install pyinstaller pyxdg

      - name: Setup environment
        run: |
          echo '__version__ = "${{ github.event.inputs.version }}"' > captura/__init__.py
          echo 'production = True' >> captura/__init__.py
          echo 'environment = "linux"' >> captura/__init__.py


      - name: Create Application
        run: |
          pyinstaller --name captura --windowed --add-data "captura/ui/assets:assets" captura/__main__.py

      - name: Create .tar.xz file
        run: |
          cd ./dist/
          tar czf captura.tar.xz ./captura/
          mv captura.tar.xz ../captura.tar.xz

      - name: Create standalone file
        run: |
          rm -rf dist
          pyinstaller --name captura --windowed --onefile --add-data "captura/ui/assets:assets" captura/__main__.py
          mv ./dist/captura ./captura_linux_standalone.bin

      - name: Upload assets to release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ./captura.tar.xz
            ./captura_linux_standalone.bin
          draft: true
          tag_name: v${{ github.event.inputs.version }}
          name: Captura v${{ github.event.inputs.version }}
          generate_release_notes: true

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python3 -m pip install -r requirements.txt
          python3 -m pip install pyinstaller
          dotnet tool install --global wix

      - name: Setup environment
        run: |
          '__version__ = "${{ github.event.inputs.version }}"' | Out-File -FilePath "captura/__init__.py"
          'production = True' | Out-File -Append -FilePath "captura/__init__.py"
          'environment = "linux"' | Out-File -Appen -FilePath "captura/__init__.py"
          (Get-Content .github\captura.wxs).Replace('[[VERSION]]', '${{ github.event.inputs.version }}') | Set-Content .github\captura.wxs

      - name: Create Application
        run: |
          pyinstaller --name captura --windowed --add-data "captura/ui/assets:assets" captura/__main__.py

      - name: Create Installer .msi
        run: |
          Move-Item -Path .\.github\captura.wxs -Destination .\dist\captura\captura.wxs
          cd .\dist\captura
          wix build -o captura-installer.msi .\captura.wxs
          Move-Item -Path captura-installer.msi -Destination ..\..\captura_installer.msi

      - name: Create standalone Application
        run: |
          Remove-Item -Recurse -Force .\dist
          pyinstaller --onefile --name captura --windowed --add-data "captura/ui/assets:assets" captura/__main__.py
          Move-Item -Path .\dist\captura.exe -Destination .\captura.exe

      - name: Upload assets to release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ./captura_installer.msi
            ./captura.exe
          draft: true
          tag_name: v${{ github.event.inputs.version }}
          name: Captura v${{ github.event.inputs.version }}
          generate_release_notes: true
